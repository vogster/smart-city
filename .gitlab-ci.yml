image: circleci/android:api-29-node

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

.init_bundler_before_script:
  before_script:
    - gem install bundler
    - bundle config set path '.bundle/' && bundle install

stages:
  - maintenance
  - quality
  - test
  - build
  - upload
  - finalize
  - release
  - notify

.retry_strategy:
  retry:
    max: 2
    when: stuck_or_timeout_failure

.tagged:
  tags: []

.only_release_branch_to_master:
  only:
    refs:
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /Merge branch 'release\/[0-9]*.[0-9]*.[0-9]*' into 'master'/

.artifactable:
  artifacts:
    expire_in: 7 days
    paths:
      - app/build/outputs/apk/

.cache_empty:
  cache: {}

.cache_build:
  cache: {}


# region quality

#unit_tests:
#  image: openjdk:8-jdk
#  stage: quality
#  only:
#    changes: ["app/src/**/*"]
#    refs:
#      - merge_requests
#      - develop
#      - master
#  extends:
#    - .tagged
#    - .retry_strategy
#  script:
#    - ./gradlew testDebugUnitTest
#  allow_failure: false
#  artifacts:
#    reports:
#      junit: app/build/reports/tests/**/index.html
#    when: on_failure

# endregion

qa:
  extends:
    - .init_bundler_before_script
  script:
    #    - ./gradlew assembleDebug appDistributionUploadDebug
    - sudo chmod +x gradlew
    - bundle exec fastlane firebase_qa
  when: manual


prod:
  extends:
    - .init_bundler_before_script
  script:
    #    - ./gradlew assembleDebug appDistributionUploadDebug
    - sudo chmod +x gradlew
    - bundle exec fastlane firebase_prod
  when: manual